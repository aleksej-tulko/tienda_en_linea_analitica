x-app-base: &app-base
  user: 0:0
  networks:
    - infra
  restart: unless-stopped

x-zookeeper-base: &zookeeper-base
  <<: *app-base
  image: confluentinc/cp-zookeeper:7.0.10

x-kafka-base: &kafka-base
  <<: *app-base
  image: confluentinc/cp-kafka:7.0.10
  depends_on:
    - zookeeper-1
    - zookeeper-2
    - zookeeper-3

x-nifi-base: &nifi-base
  <<: *app-base
  image: apache/nifi:1.21.0
  depends_on:
    - zookeeper-1
    - zookeeper-2
    - zookeeper-3

x-zookeeper-environment: &zookeeper-environment
  ZOOKEEPER_QUORUM_LISTEN_ON_ALL_IPS: true
  ZOOKEEPER_SERVER_1: zookeeper-1:2888:3888
  ZOOKEEPER_SERVER_2: zookeeper-2:2888:3888
  ZOOKEEPER_SERVER_3: zookeeper-3:2888:3888
  ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888

  ZOOKEEPER_TICK_TIME: 2000
  ZOOKEEPER_INIT_LIMIT: 10
  ZOOKEEPER_SYNC_LIMIT: 5
  ZOOKEEPER_SECURE_CLIENT_PORT: 2281
  ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory

  ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
  ZOOKEEPER_SSL_KEYSTORE_ALIAS: zookeeper

  ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/zookeeper/certs/truststore.jks

  ZOOKEEPER_SSL_KEYSTORE_PASSWORD: changeit
  ZOOKEEPER_SSL_KEY_PASSWORD: changeit
  ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: changeit

  ZOOKEEPER_SSL_CLIENT_ENABLE: true
  ZOOKEEPER_SSL_CLIENT_AUTH: need

  KAFKA_OPTS: >-
    -Djava.security.auth.login.config=/etc/zookeeper/configs/zookeeper.sasl.jaas.conf
    -Dzookeeper.authProvider.sasl=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    -Dzookeeper.allowSaslFailedClients=false
    -Dzookeeper.requireClientAuthScheme=sasl

x-kafka-environment: &kafka-environment
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
  KAFKA_DELETE_TOPIC_ENABLE: false
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 30000
  KAFKA_ZOOKEEPER_SASL_CLIENT: true
  KAFKA_ZOOKEEPER_SET_ACL: true
  KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: true
  KAFKA_ZOOKEEPER_SECURITY_PROTOCOL: SASL_SSL
  KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
  KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
  KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: changeit
  KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: changeit

  KAFKA_SSL_CLIENT_AUTH: required
  KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
  KAFKA_SSL_KEYSTORE_TYPE: PKCS12
  KAFKA_SSL_TRUSTSTORE_TYPE: JKS
  KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks

  KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka_creds
  KAFKA_SSL_KEY_CREDENTIALS: kafka_creds
  KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka_creds

  KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
  KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
  KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
  KAFKA_LISTENER_NAME_SASL_SSL_SSL_CLIENT_AUTH: required

  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_SSL:SASL_SSL
  KAFKA_INTER_BROKER_LISTENER_NAME: SASL_SSL
  KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
  KAFKA_SUPER_USERS: User:kafka_server_admin

  KAFKA_JMX_PORT: 8841

x-nifi-environment: &nifi-environment
  NIFI_WEB_HTTPS_PORT: 8443
  NIFI_CLUSTER_IS_NODE: true
  NIFI_ZK_CONNECT_STRING: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281
  NIFI_ELECTION_MAX_WAIT: 30 sec
  NIFI_ELECTION_MAX_CANDIDATES: 1
  NIFI_SENSITIVE_PROPS_KEY: 3e38a10eb5fb
  NIFI_CLUSTER_NODE_PROTOCOL_PORT: 8082
  NIFI_WEB_PROXY_HOST: 100.100.19.8:8443
  SINGLE_USER_CREDENTIALS_USERNAME: nifi-user
  SINGLE_USER_CREDENTIALS_PASSWORD: nifi-password
  NIFI_SECURITY_USER_AUTHORIZER: single-user-authorizer
  NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER: single-user-provider
  INITIAL_ADMIN_IDENTITY: nifi-user
  AUTH: tls
  KEYSTORE_TYPE: PKCS12
  KEYSTORE_PASSWORD: changeit
  TRUSTSTORE_TYPE: JKS
  TRUSTSTORE_PASSWORD: changeit
  NIFI_ZOOKEEPER_AUTH_TYPE: sasl
  JAVA_TOOL_OPTIONS: >-
    -Djava.security.auth.login.config=/opt/nifi/conf/zookeeper.sasl.nifi.jaas.conf
    -Dzookeeper.client.secure=true
    -Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty
    -Dzookeeper.ssl.keyStore.location=/opt/certs/client.p12
    -Dzookeeper.ssl.keyStore.password=changeit
    -Dzookeeper.ssl.keyStore.type=PKCS12
    -Dzookeeper.ssl.trustStore.location=/opt/certs/truststore.jks
    -Dzookeeper.ssl.trustStore.password=changeit
    -Dzookeeper.ssl.trustStore.type=JKS

services:
  vault:
    <<: *app-base
    build:
        context: ./vault
        dockerfile: Dockerfile
    container_name: vault
    hostname: vault
    volumes:
      - vault_config:/vault/config
      - vault_certs:/vault/certs
      - vault_secrets:/vault/secrets
      - vault_storage:/vault/storage
    environment:
      VAULT_ADDR: "http://127.0.0.1:8200"
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config /vault/config/config.hcl

  zookeeper-1:
    <<: *zookeeper-base
    container_name: zookeeper-1
    hostname: zookeeper-1
    volumes:
      - zookeeper_log_1:/var/lib/zookeeper/log
      - zookeeper_data_1:/var/lib/zookeeper/data
      - vault_certs:/etc/zookeeper/certs
      - ./zookeeper/configs/zookeeper.sasl.jaas.conf:/etc/zookeeper/configs/zookeeper.sasl.jaas.conf
    environment:
      <<: *zookeeper-environment
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/certs/zookeeper-1.p12

  zookeeper-2:
    <<: *zookeeper-base
    container_name: zookeeper-2
    hostname: zookeeper-2
    volumes:
      - zookeeper_log_2:/var/lib/zookeeper/log
      - zookeeper_data_2:/var/lib/zookeeper/data
      - vault_certs:/etc/zookeeper/certs
      - ./zookeeper/configs/zookeeper.sasl.jaas.conf:/etc/zookeeper/configs/zookeeper.sasl.jaas.conf
    environment:
      <<: *zookeeper-environment
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/certs/zookeeper-2.p12

  zookeeper-3:
    <<: *zookeeper-base
    container_name: zookeeper-3
    hostname: zookeeper-3
    volumes:
      - zookeeper_log_3:/var/lib/zookeeper/log
      - zookeeper_data_3:/var/lib/zookeeper/data
      - vault_certs:/etc/zookeeper/certs
      - ./zookeeper/configs/zookeeper.sasl.jaas.conf:/etc/zookeeper/configs/zookeeper.sasl.jaas.conf
    environment:
      <<: *zookeeper-environment
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/certs/zookeeper-3.p12
  
  zoonavigator:
    <<: *app-base
    image: elkozmon/zoonavigator
    container_name: zoonavigator
    hostname: zoonavigator
    volumes:
      - vault_certs:/etc/zookeeper/certs
      - ./zookeeper/configs/zookeeper.sasl.client.jaas.conf:/etc/zookeeper/configs/zookeeper.sasl.zoonavigator.jaas.conf
    environment:
      HTTP_PORT: disabled
      HTTPS_PORT: 9443
      ZK_CLIENT_SECURE: true
      ZK_SASL_CLIENT: true
      ZK_SASL_CLIENT_CONFIG: Client
      ZK_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      ZK_SSL_KEYSTORE_PATH: /etc/zookeeper/certs/client.p12
      ZK_SSL_TRUSTSTORE_PATH: /etc/zookeeper/certs/truststore.jks
      ZK_SSL_TRUSTSTORE_PASSWORD: changeit
      ZK_SSL_KEYSTORE_PASSWORD: changeit
      SSL_KEYSTORE_PATH: /etc/zookeeper/certs/zoonavigator.p12
      SSL_KEYSTORE_TYPE: PKCS12
      SSL_KEYSTORE_PASSWORD: changeit
      JAVA_JAAS_LOGIN_CONFIG: /etc/zookeeper/configs/zookeeper.sasl.kafka.jaas.conf
      JAVA_TOOL_OPTIONS: >-
        -Djava.security.auth.login.config=/etc/zookeeper/configs/zookeeper.sasl.zoonavigator.jaas.conf
    ports:
      - 9443:9443
  
  kafka-1:
    <<: *kafka-base
    container_name: kafka-1
    hostname: kafka-1
    volumes:
      - kafka_1:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka.yml:/etc/kafka/config_kafka.yml
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 1
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-1:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-1.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka.yml

  kafka-replica-1:
    <<: *kafka-base
    container_name: kafka-replica-1
    hostname: kafka-replica-1
    volumes:
      - kafka_replica_1:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka.yml:/etc/kafka/config_kafka.yml
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 4
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-replica-1.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-replica-1:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-replica-1.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka-replica
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka.yml

  kafka-2:
    <<: *kafka-base
    container_name: kafka-2
    hostname: kafka-2
    volumes:
      - kafka_2:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka.yml:/etc/kafka/config_kafka.yml
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 2
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-2:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-2.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka.yml
  
  kafka-replica-2:
    <<: *kafka-base
    container_name: kafka-replica-2
    hostname: kafka-replica-2
    volumes:
      - kafka_replica_2:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka.yml:/etc/kafka/config_kafka.yml
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 5
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-replica-2.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-replica-2:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-replica-2.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka-replica
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka.yml

  kafka-3:
    <<: *kafka-base
    container_name: kafka-3
    hostname: kafka-3
    volumes:
      - kafka_3:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka.yml:/etc/kafka/config_kafka.yml
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 3
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-3.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-3:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-3.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka.yml

  kafka-replica-3:
    <<: *kafka-base
    container_name: kafka-replica-3
    hostname: kafka-replica-3
    volumes:
      - kafka_replica_3:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka.yml:/etc/kafka/config_kafka.yml
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 6
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-replica-3.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-replica-3:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-replica-3.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka-replica
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka.yml

  schema-registry:
    <<: *app-base
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: schema_registry
    hostname: schema_registry
    volumes:
      - vault_certs:/etc/kafka/certs
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-1:9093,kafka-2:9093,kafka-3:9093
      SCHEMA_REGISTRY_LISTENERS: https://0.0.0.0:8081
      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https
      SCHEMA_REGISTRY_SSL_CLIENT_AUTH: true
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/certs/schema-registry.p12
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: changeit
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: changeit
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: changeit
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="schema" password="schema_pass";
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: changeit
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/certs/client.p12
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: changeit
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORYTHM: ''
    ports:
      - 8081:8081
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - kafka-replica-1
      - kafka-replica-2
      - kafka-replica-3

  ui:
    <<: *app-base
    image: provectuslabs/kafka-ui:v0.7.0
    container_name: ui
    hostname: ui
    volumes:
      - vault_certs:/etc/ui/certs
      - ./kafka/configs/config.yml:/etc/ui/config.yml
    environment:
      SPRING_CONFIG_ADDITIONAL_LOCATION: /etc/ui/config.yml
    ports:
      - 8080:8080
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3

  kafka-connect:
    <<: *app-base
    build:
      context: ./kafka-connect
      dockerfile: Dockerfile
    container_name: kafka_connect
    hostname: kafka_connect
    volumes:
      - vault_certs:/etc/kafka/certs
      - ./confluent-hub-components/:/etc/kafka-connect/jars
      - ./kafka-connect/connect.json:/etc/kafka/connect.json
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-1:9093,kafka-2:9093,kafka-3:9093
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka_connect
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SASL_JAAS_CONFIG: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="connect" password="connect_pass";
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: changeit
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka/certs/client.p12
      CONNECT_SSL_KEYSTORE_PASSWORD: changeit
      CONNECT_SSL_KEY_PASSWORD: changeit
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config-storage
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset-storage
      CONNECT_STATUS_STORAGE_TOPIC: connect-status-storage
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    ports:
      - 8083:8083
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry

  nifi-1:
    <<: *nifi-base
    container_name: nifi-1
    hostname: nifi-1
    volumes:
      - vault_certs:/opt/certs
      - nifi-1_conf:/opt/nifi/nifi-current/conf
      - nifi-1_extensions:/opt/nifi/nifi-current/extensions
      - nifi-1_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi-1_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi-1_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi-1_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi-1_state:/opt/nifi/nifi-current/state
      - nifi-1_logs:/opt/nifi/nifi-current/logs
      - ./zookeeper/configs/zookeeper.sasl.nifi.jaas.conf:/opt/nifi/conf/zookeeper.sasl.nifi.jaas.conf
    environment:
      <<: *nifi-environment
      NIFI_CLUSTER_ADDRESS: nifi-1
      NIFI_WEB_HTTPS_HOST: nifi-1
      KEYSTORE_PATH: /opt/certs/nifi-1.p12
      TRUSTSTORE_PATH: /opt/certs/truststore.jks
    entrypoint:
      - "/bin/bash"
      - "-c"
      - "sed -i 's/nifi.ui.banner.text=.*/nifi.ui.banner.text=nifi-1 (v1.21.0)/' conf/nifi.properties; ../scripts/start.sh"

  nifi-2:
    <<: *nifi-base
    container_name: nifi-2
    hostname: nifi-2
    volumes:
      - vault_certs:/opt/certs
      - nifi-2_conf:/opt/nifi/nifi-current/conf
      - nifi-2_extensions:/opt/nifi/nifi-current/extensions
      - nifi-2_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi-2_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi-2_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi-2_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi-2_state:/opt/nifi/nifi-current/state
      - nifi-2_logs:/opt/nifi/nifi-current/logs
      - ./zookeeper/configs/zookeeper.sasl.nifi.jaas.conf:/opt/nifi/conf/zookeeper.sasl.nifi.jaas.conf
    environment:
      <<: *nifi-environment
      NIFI_CLUSTER_ADDRESS: nifi-2
      NIFI_WEB_HTTPS_HOST: nifi-2
      KEYSTORE_PATH: /opt/certs/nifi-2.p12
      TRUSTSTORE_PATH: /opt/certs/truststore.jks
    entrypoint:
      - "/bin/bash"
      - "-c"
      - "sed -i 's/nifi.ui.banner.text=.*/nifi.ui.banner.text=nifi-2 (v1.21.0)/' conf/nifi.properties; ../scripts/start.sh"
  
  nifi-3:
    <<: *nifi-base
    container_name: nifi-3
    hostname: nifi-3
    volumes:
      - vault_certs:/opt/certs
      - nifi-3_conf:/opt/nifi/nifi-current/conf
      - nifi-3_extensions:/opt/nifi/nifi-current/extensions
      - nifi-3_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi-3_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi-3_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi-3_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi-3_state:/opt/nifi/nifi-current/state
      - nifi-3_logs:/opt/nifi/nifi-current/logs
      - ./zookeeper/configs/zookeeper.sasl.nifi.jaas.conf:/opt/nifi/conf/zookeeper.sasl.nifi.jaas.conf
    environment:
      <<: *nifi-environment
      NIFI_CLUSTER_ADDRESS: nifi-3
      NIFI_WEB_HTTPS_HOST: nifi-3
      KEYSTORE_PATH: /opt/certs/nifi-3.p12
      TRUSTSTORE_PATH: /opt/certs/truststore.jks
    entrypoint:
      - "/bin/bash"
      - "-c"
      - "sed -i 's/nifi.ui.banner.text=.*/nifi.ui.banner.text=nifi-3 (v1.21.0)/' conf/nifi.properties; ../scripts/start.sh"

  nifi-web-proxy:
    <<: *app-base
    image: nginx:latest
    container_name: nifi-web-proxy
    hostname: nifi-web-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8443:8443
    depends_on:
      - nifi-1
      - nifi-2
      - nifi-3

  hadoop-namenode:
    <<: *app-base
    image: apache/hadoop:3.4.1
    container_name: hadoop-namenode
    hostname: hadoop-namenode
    volumes:
      - ./hadoop/configs/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/configs/hdfs-site-namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/configs/yarn-site.xml:/opt/hadoop/etc/hadoop/yarn-site.xml
      - ./hadoop/namenode_entrypoint.sh:/namenode_entrypoint.sh
    ports:
      - 9870:9870
      - 9000:9000
      - 8088:8088
    entrypoint: ["/bin/bash", "/namenode_entrypoint.sh"]
    command: ["hdfs", "namenode"]

  hadoop-datanode-1:
    <<: *app-base
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    container_name: hadoop-datanode-1
    hostname: hadoop-datanode-1
    volumes:
      - ./hadoop/configs/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/configs/hdfs-site-datanode-1.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/configs/yarn-site.xml:/opt/hadoop/etc/hadoop/yarn-site.xml
      - ./hadoop/datanode_entrypoint.sh:/datanode_entrypoint.sh
    ports:
      - 9864:9864
      - 9970:9970
      - 8042:8042
    entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
    command: ["hdfs", "datanode"]
    depends_on:
      - hadoop-namenode
  
  hadoop-datanode-2:
    <<: *app-base
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    container_name: hadoop-datanode-2
    hostname: hadoop-datanode-2
    volumes:
      - ./hadoop/configs/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/configs/hdfs-site-datanode-2.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/configs/yarn-site.xml:/opt/hadoop/etc/hadoop/yarn-site.xml
      - ./hadoop/datanode_entrypoint.sh:/datanode_entrypoint.sh
    ports:
      - 9865:9865
      - 9971:9971
    entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
    command: ["hdfs", "datanode"]
    depends_on:
      - hadoop-namenode

  hadoop-datanode-3:
    <<: *app-base
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    container_name: hadoop-datanode-3
    hostname: hadoop-datanode-3
    volumes:
      - ./hadoop/configs/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/configs/hdfs-site-datanode-3.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/configs/yarn-site.xml:/opt/hadoop/etc/hadoop/yarn-site.xml
      - ./hadoop/datanode_entrypoint.sh:/datanode_entrypoint.sh
    ports:
      - 9866:9866
      - 9972:9972
    entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
    command: ["hdfs", "datanode"]
    depends_on:
      - hadoop-namenode

  # hadoop-resource-manager:
  #   <<: *app-base
  #   image: apache/hadoop:3.4.1
  #   container_name: hadoop-resource-manager
  #   hostname: hadoop-resource-manager
  #   volumes:
  #     - ./hadoop/configs/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
  #     - ./hadoop/configs/yarn-site.xml:/opt/hadoop/etc/hadoop/yarn-site.xml
  #     - ./hadoop/yarn_resource_entrypoint.sh:/yarn_entrypoint.sh
  #   ports:
  #     - 8088:8088
  #   entrypoint: ["/bin/bash", "/yarn_entrypoint.sh"]
  #   command: ["yarn", "resourcemanager"]

  # hadoop-node-manager:
  #   <<: *app-base
  #   image: apache/hadoop:3.4.1
  #   container_name: hadoop-node-manager
  #   hostname: hadoop-node-manager
  #   volumes:
  #     - ./hadoop/configs/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
  #     - ./hadoop/configs/yarn-site.xml:/opt/hadoop/etc/hadoop/yarn-site.xml
  #     - ./hadoop/yarn_node_entrypoint.sh:/yarn_entrypoint.sh
  #   entrypoint: ["/bin/bash", "/yarn_entrypoint.sh"]
  #   command: ["yarn", "nodemanager"]
  
  prometheus:
    <<: *app-base
    image: prom/prometheus:main
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./etc/prometheus/alert.rules:/etc/prometheus/alert.rules
    ports:
      - 9090:9090
    command: --config.file=/etc/prometheus/prometheus.yml
  
  alertmanager:
    <<: *app-base
    image: prom/alertmanager:main
    container_name: alertmanager
    hostname: alertmanager
    volumes:
      - ./etc/alertmanager/config.yml:/etc/alertmanager/config.yml
    ports:
      - 9093:9093
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--log.level=debug'

  grafana:
    <<: *app-base
    image: grafana/grafana:main-ubuntu
    container_name: grafana
    hostname: grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      GF_PATHS_DATA: /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD: kafka
    ports:
      - 3000:3000
    depends_on:
      - prometheus

volumes:
  vault_config:
  vault_certs:
  vault_secrets:
  vault_storage:
  zookeeper_log_1:
  zookeeper_data_1:
  zookeeper_log_2:
  zookeeper_data_2:
  zookeeper_log_3:
  zookeeper_data_3:
  kafka_1:
  kafka_2:
  kafka_3:
  kafka_replica_1:
  kafka_replica_2:
  kafka_replica_3:
  nifi-1_conf:
  nifi-1_extensions:
  nifi-1_database_repository:
  nifi-1_flowfile_repository:
  nifi-1_content_repository:
  nifi-1_provenance_repository:
  nifi-1_state:
  nifi-1_logs:
  nifi-2_conf:
  nifi-2_extensions:
  nifi-2_database_repository:
  nifi-2_flowfile_repository:
  nifi-2_content_repository:
  nifi-2_provenance_repository:
  nifi-2_state:
  nifi-2_logs:
  nifi-3_conf:
  nifi-3_extensions:
  nifi-3_database_repository:
  nifi-3_flowfile_repository:
  nifi-3_content_repository:
  nifi-3_provenance_repository:
  nifi-3_state:
  nifi-3_logs:


networks:
  infra: