x-app-base: &app-base
  user: 0:0
  networks:
    - infra
  restart: unless-stopped

x-zookeeper-base: &zookeeper-base
  <<: *app-base
  image: confluentinc/cp-zookeeper:7.0.10

x-kafka-base: &kafka-base
  <<: *app-base
  image: confluentinc/cp-kafka:7.0.10
  depends_on:
    - zookeeper-1
    - zookeeper-2
    - zookeeper-3

x-zookeeper-environment: &zookeeper-environment
  ZOOKEEPER_QUORUM_LISTEN_ON_ALL_IPS: true
  ZOOKEEPER_SERVER_1: zookeeper-1:2888:3888
  ZOOKEEPER_SERVER_2: zookeeper-2:2888:3888
  ZOOKEEPER_SERVER_3: zookeeper-3:2888:3888
  ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888

  ZOOKEEPER_TICK_TIME: 2000
  ZOOKEEPER_INIT_LIMIT: 10
  ZOOKEEPER_SYNC_LIMIT: 5
  ZOOKEEPER_SECURE_CLIENT_PORT: 2281
  ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory

  ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
  ZOOKEEPER_SSL_KEYSTORE_ALIAS: zookeeper

  ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/zookeeper/certs/truststore.jks

  ZOOKEEPER_SSL_KEYSTORE_PASSWORD: changeit
  ZOOKEEPER_SSL_KEY_PASSWORD: changeit
  ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: changeit

  ZOOKEEPER_SSL_CLIENT_ENABLE: true
  ZOOKEEPER_SSL_CLIENT_AUTH: need

  KAFKA_OPTS: >-
    -Djava.security.auth.login.config=/etc/zookeeper/configs/zookeeper.sasl.jaas.conf
    -Dzookeeper.authProvider.sasl=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    -Dzookeeper.allowSaslFailedClients=false
    -Dzookeeper.requireClientAuthScheme=sasl

x-kafka-environment: &kafka-environment
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
  KAFKA_DELETE_TOPIC_ENABLE: false
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 30000
  KAFKA_ZOOKEEPER_SASL_CLIENT: 'true'
  KAFKA_ZOOKEEPER_SET_ACL: 'true'
  KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: true
  KAFKA_ZOOKEEPER_SECURITY_PROTOCOL: SASL_SSL
  KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
  KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
  KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: changeit
  KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: changeit

  KAFKA_SSL_CLIENT_AUTH: required
  KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
  KAFKA_SSL_KEYSTORE_TYPE: PKCS12
  KAFKA_SSL_TRUSTSTORE_TYPE: JKS
  KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks

  KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka_creds
  KAFKA_SSL_KEY_CREDENTIALS: kafka_creds
  KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka_creds

  KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
  KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
  KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
  KAFKA_LISTENER_NAME_SASL_SSL_SSL_CLIENT_AUTH: need
  KAFKA_LISTENER_NAME_EXTERNAL_SSL_CLIENT_AUTH: required

  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_SSL:SASL_SSL
  KAFKA_INTER_BROKER_LISTENER_NAME: SASL_SSL
  KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
  KAFKA_SUPER_USERS: User:kafka_server_admin

  KAFKA_JMX_PORT: 8841

services:
  vault:
    <<: *app-base
    build:
        context: ./vault
        dockerfile: Dockerfile
    container_name: vault_certs_generator
    hostname: vault
    environment:
      VAULT_ADDR: "http://127.0.0.1:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_config:/vault/config
      - vault_certs:/vault/certs
      - vault_secrets:/vault/secrets
      - vault_storage:/vault/storage
    entrypoint: vault server -config /vault/config/config.hcl

  zookeeper-1:
    <<: *zookeeper-base
    container_name: zookeeper-1
    hostname: zookeeper-1
    environment:
      <<: *zookeeper-environment
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/certs/zookeeper-1.p12
    volumes:
      - zookeeper_log_1:/var/lib/zookeeper/log
      - zookeeper_data_1:/var/lib/zookeeper/data
      - vault_certs:/etc/zookeeper/certs
      - ./zookeeper/configs/zookeeper.sasl.jaas.conf:/etc/zookeeper/configs/zookeeper.sasl.jaas.conf

  zookeeper-2:
    <<: *zookeeper-base
    container_name: zookeeper-2
    hostname: zookeeper-2
    environment:
      <<: *zookeeper-environment
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/certs/zookeeper-2.p12
    volumes:
      - zookeeper_log_2:/var/lib/zookeeper/log
      - zookeeper_data_2:/var/lib/zookeeper/data
      - vault_certs:/etc/zookeeper/certs
      - ./zookeeper/configs/zookeeper.sasl.jaas.conf:/etc/zookeeper/configs/zookeeper.sasl.jaas.conf

  zookeeper-3:
    <<: *zookeeper-base
    container_name: zookeeper-3
    hostname: zookeeper-3
    environment:
      <<: *zookeeper-environment
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/certs/zookeeper-3.p12
    volumes:
      - zookeeper_log_3:/var/lib/zookeeper/log
      - zookeeper_data_3:/var/lib/zookeeper/data
      - vault_certs:/etc/zookeeper/certs
      - ./zookeeper/configs/zookeeper.sasl.jaas.conf:/etc/zookeeper/configs/zookeeper.sasl.jaas.conf
  
  zoonavigator:
    <<: *app-base
    image: elkozmon/zoonavigator
    container_name: zoonavigator
    hostname: zoonavigator
    ports:
      - 9443:9443
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      HTTP_PORT: disabled
      HTTPS_PORT: 9443
      ZK_CLIENT_SECURE: true
      ZK_SASL_CLIENT: true
      ZK_SASL_CLIENT_CONFIG: Client
      ZK_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      ZK_SSL_KEYSTORE_PATH: /etc/zookeeper/certs/client.p12
      ZK_SSL_TRUSTSTORE_PATH: /etc/zookeeper/certs/truststore.jks
      ZK_SSL_TRUSTSTORE_PASSWORD: changeit
      ZK_SSL_KEYSTORE_PASSWORD: changeit

      SSL_KEYSTORE_PATH: /etc/zookeeper/certs/zoonavigator.p12
      SSL_KEYSTORE_TYPE: PKCS12
      SSL_KEYSTORE_PASSWORD: changeit

      JAVA_JAAS_LOGIN_CONFIG: /etc/zookeeper/configs/zookeeper.sasl.client.jaas.conf
      JAVA_TOOL_OPTIONS: >- 
        -Djava.security.auth.login.config=/etc/zookeeper/configs/zookeeper.sasl.client.jaas.conf
    volumes:
      - vault_certs:/etc/zookeeper/certs
      - ./zookeeper/configs/zookeeper.sasl.client.jaas.conf:/etc/zookeeper/configs/zookeeper.sasl.client.jaas.conf
  
  kafka-1:
    <<: *kafka-base
    container_name: kafka-1
    hostname: kafka-1
    ports:
      - 7000:6969
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 1
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-1:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-1.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka-1.yml
    volumes:
      - kafka_1:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka-1.yml:/etc/kafka/config_kafka-1.yml

  kafka-replica-1:
    <<: *kafka-base
    container_name: kafka-replica-1
    hostname: kafka-replica-1
    ports:
      - 8000:6969
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 4
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-replica-1.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-replica-1:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-replica-1.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka-replica
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka-replica-1.yml
    volumes:
      - kafka_replica_1:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka-replica-1.yml:/etc/kafka/config_kafka-replica-1.yml

  kafka-2:
    <<: *kafka-base
    container_name: kafka-2
    hostname: kafka-2
    ports:
      - 7001:6969
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 2
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-2:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-2.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka-1.yml
    volumes:
      - kafka_2:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka-1.yml:/etc/kafka/config_kafka-1.yml
  
  kafka-replica-2:
    <<: *kafka-base
    container_name: kafka-replica-2
    hostname: kafka-replica-2
    ports:
      - 8001:6969
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 5
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-replica-2.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-replica-2:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-replica-2.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka-replica
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka-replica-2.yml
    volumes:
      - kafka_replica_2:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka-replica-2.yml:/etc/kafka/config_kafka-replica-2.yml

  kafka-3:
    <<: *kafka-base
    container_name: kafka-3
    hostname: kafka-3
    ports:
      - 7002:6969
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 3
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-3.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-3:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-3.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka-1.yml
    volumes:
      - kafka_3:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka-1.yml:/etc/kafka/config_kafka-1.yml

  kafka-replica-3:
    <<: *kafka-base
    container_name: kafka-replica-3
    hostname: kafka-replica-3
    ports:
      - 8002:6969
    environment:
      <<: *kafka-environment
      KAFKA_BROKER_ID: 6
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-replica-3.p12
      KAFKA_LISTENERS: SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka-replica-3:9093
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-replica-3.p12
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2281,zookeeper-2:2281,zookeeper-3:2281/kafka-replica
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf
        -javaagent:/opt/jmx_prometheus_javaagent.jar=6969:/etc/kafka/config_kafka-replica-3.yml
    volumes:
      - kafka_replica_3:/var/lib/kafka/data
      - vault_certs:/etc/kafka/certs
      - vault_secrets:/etc/kafka/secrets
      - ./kafka/configs/kafka_server_jaas.conf:/etc/kafka/secrets/kafka_server_jaas.conf
      - ./kafka/configs/adminclient-configs.conf:/etc/kafka/secrets/adminclient-configs.conf
      - ./etc/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar:/opt/jmx_prometheus_javaagent.jar
      - ./etc/jmx_exporter/config_kafka-replica-3.yml:/etc/kafka/config_kafka-replica-3.yml

  schema-registry:
    <<: *app-base
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema_registry
    container_name: schema_registry
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - kafka-replica-1
      - kafka-replica-2
      - kafka-replica-3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-1:9093,kafka-2:9093,kafka-3:9093
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="schema" password="schema_pass";
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: changeit
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/certs/client.p12
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: changeit
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORYTHM: ''
    volumes:
      - vault_certs:/etc/kafka/certs

  ui:
    <<: *app-base
    image: provectuslabs/kafka-ui:v0.7.0
    container_name: ui
    hostname: ui
    volumes:
      - vault_certs:/etc/ui/certs
    ports:
      - 8080:8080
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka-1:9093,kafka-2:9093,kafka-3:9093
      KAFKA_CLUSTERS_0_NAME: kafka

      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL

      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_TYPE: PKCS12

      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION: /etc/ui/certs/truststore.jks
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_LOCATION: /etc/ui/certs/client.p12

      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: changeit
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_PASSWORD: changeit

      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="ui" password="ui_password";
      
      KAFKA_CLUSTERS_1_BOOTSTRAP_SERVERS: kafka-replica-1:9093,kafka-replica-2:9093,kafka-replica-3:9093
      KAFKA_CLUSTERS_1_NAME: kafka-replica

      KAFKA_CLUSTERS_1_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL

      KAFKA_CLUSTERS_1_PROPERTIES_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_CLUSTERS_1_PROPERTIES_SSL_KEYSTORE_TYPE: PKCS12

      KAFKA_CLUSTERS_1_PROPERTIES_SSL_TRUSTSTORE_LOCATION: /etc/ui/certs/truststore.jks
      KAFKA_CLUSTERS_1_PROPERTIES_SSL_KEYSTORE_LOCATION: /etc/ui/certs/client.p12

      KAFKA_CLUSTERS_1_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: changeit
      KAFKA_CLUSTERS_1_PROPERTIES_SSL_KEYSTORE_PASSWORD: changeit

      KAFKA_CLUSTERS_1_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_1_PROPERTIES_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_CLUSTERS_1_PROPERTIES_SASL_JAAS_CONFIG: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="ui" password="ui_password";

  kafka-connect:
    <<: *app-base
    build:
      context: ./kafka-connect
      dockerfile: Dockerfile
    container_name: kafka_connect
    hostname: kafka_connect
    # ports:
    #   - 8083:8083
    #   - 9875:9875
    #   - 9876:9876
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-1:9093,kafka-2:9093,kafka-3:9093
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka_connect
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost

      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SASL_JAAS_CONFIG: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="connect"
        password="connect_pass";
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: changeit
      CONNECT_SSL_KEY_STORE_LOCATION: /etc/kafka/certs/client.p12
      CONNECT_SSL_KEYSTORE_PASSWORD: changeit
      # CONNECT_SSL_KEY_PASSWORD: changeit

      CONNECT_CONFIG_STORAGE_TOPIC: connect-config-storage
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset-storage
      CONNECT_STATUS_STORAGE_TOPIC: connect-status-storage
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3

      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    volumes:
      - vault_certs:/etc/kafka/certs
  
  prometheus:
    <<: *app-base
    image: prom/prometheus:main
    container_name: prometheus
    hostname: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./etc/prometheus/alert.rules:/etc/prometheus/alert.rules
    command: --config.file=/etc/prometheus/prometheus.yml
  
  alertmanager:
    <<: *app-base
    image: prom/alertmanager:main
    container_name: alertmanager
    hostname: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./etc/alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--log.level=debug'

  grafana:
    <<: *app-base
    image: grafana/grafana:main-ubuntu
    container_name: grafana
    hostname: grafana
    ports:
      - 3000:3000
    environment:
      GF_PATHS_DATA: /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD: kafka
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  namenode:
    <<: *app-base
    image: sbloodys/hadoop:3.3.6
    hostname: namenode
    container_name: namenode
    command: [ "hdfs", "namenode" ]
    ports:
      - 19870:9870
    env_file:
      - docker-compose.config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "http://namenode:9870" ]
      interval: 5s
      timeout: 5s
      retries: 120
  datanode:
    <<: *app-base
    image: sbloodys/hadoop:3.3.6
    hostname: datanode
    container_name: datanode
    command: [ "hdfs", "datanode" ]
    env_file:
      - docker-compose.config
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "http://datanode:9864" ]
      interval: 5s
      timeout: 5s
      retries: 120
    depends_on:
      namenode:
        condition: service_healthy
  resourcemanager:
    <<: *app-base
    image: sbloodys/hadoop:3.3.6
    hostname: resourcemanager
    container_name: resourcemanager
    command: [ "yarn", "resourcemanager" ]
    ports:
      - 18088:8088
    env_file:
      - docker-compose.config
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "http://resourcemanager:8088" ]
      interval: 5s
      timeout: 5s
      retries: 120
  nodemanager:
    <<: *app-base
    image: sbloodys/hadoop:3.3.6
    hostname: nodemanager
    container_name: nodemanager
    command: [ "yarn", "nodemanager" ]
    env_file:
      - docker-compose.config
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    depends_on:
      resourcemanager:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "http://nodemanager:8042" ]
      interval: 5s
      timeout: 5s
      retries: 120

volumes:
  vault_config:
  vault_certs:
  vault_secrets:
  vault_storage:
  zookeeper_log_1:
  zookeeper_data_1:
  zookeeper_log_2:
  zookeeper_data_2:
  zookeeper_log_3:
  zookeeper_data_3:
  kafka_1:
  kafka_2:
  kafka_3:
  kafka_replica_1:
  kafka_replica_2:
  kafka_replica_3:

networks:
  infra: